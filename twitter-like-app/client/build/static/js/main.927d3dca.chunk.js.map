{"version":3,"sources":["components/TweetBox.js","components/Tweets.js","components/Feed.js","components/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["socket","io","connect","TweetBox","useState","yourTweetName","setYourTweetName","yourTweet","setYourTweet","className","onSubmit","e","preventDefault","emit","name","tweet","type","placeholder","onChange","target","value","Feed","props","index","tweets","setTweets","useEffect","on","map","Tweets","HomePage","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAGMA,EAASC,IAAGC,QAAQ,yBAwCXC,MAtCf,WAAqB,IAAD,EACwBC,mBAAS,IADjC,mBACXC,EADW,KACIC,EADJ,OAEgBF,mBAAS,IAFzB,mBAEXG,EAFW,KAEAC,EAFA,KAYlB,OACE,qBAAKC,UAAU,WAAf,SACE,uBAAMC,SAVU,SAACC,GACnBA,EAAEC,iBACFZ,EAAOa,KAAK,aAAc,CACxBC,KAAMT,EACNU,MAAOR,KAMP,UACE,uBACES,KAAK,OACLC,YAAY,OACZH,KAAK,OACLI,SAAU,SAACP,GACTL,EAAiBK,EAAEQ,OAAOC,UAI9B,uBACEJ,KAAK,OACLC,YAAY,QACZH,KAAK,QACLI,SAAU,SAACP,GACTH,EAAaG,EAAEQ,OAAOC,UAG1B,uBAAOJ,KAAK,iB,QCtBLK,MAZf,SAAcC,GAAQ,IACZR,EAAuBQ,EAAvBR,KAAMC,EAAiBO,EAAjBP,MAAOQ,EAAUD,EAAVC,MAErB,OACE,gCACE,wCAAWT,KACX,yCAAYC,KACZ,yBAHQQ,ICDRvB,G,MAASC,IAAGC,QAAQ,0BA0BXmB,MAxBf,WAAiB,IAAD,EACcjB,mBAAS,IADvB,mBACPoB,EADO,KACCC,EADD,KAiBd,OAZAC,qBAAU,WACR1B,EAAO2B,GAAG,cAAc,YAAsB,IAAnBb,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAC/BU,EAAU,GAAD,mBAAKD,GAAL,CAAa,CAAEV,OAAMC,kBAWhC,qBAAKN,UAAU,OAAf,SACE,8BAPKe,EAAOI,KAAI,WAAkBL,GAAlB,IAAGT,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAT,OAChB,cAACc,EAAD,CAAQf,KAAMA,EAAMC,MAAOA,EAAOQ,MAAOA,Y,MCJhCO,MAVf,WACE,OACE,sBAAKrB,UAAU,YAAf,UACE,8CACA,cAAC,EAAD,IACA,cAAC,EAAD,QCHSsB,MAJf,WACE,OAAO,cAAC,EAAD,KCMMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.927d3dca.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\n\nconst socket = io.connect(\"http://localhost:5000\");\n\nfunction TweetBox() {\n  const [yourTweetName, setYourTweetName] = useState(\"\");\n  const [yourTweet, setYourTweet] = useState(\"\");\n\n  const submitTweet = (e) => {\n    e.preventDefault();\n    socket.emit(\"tweetEvent\", {\n      name: yourTweetName,\n      tweet: yourTweet,\n    });\n  };\n\n  return (\n    <div className=\"TweetBox\">\n      <form onSubmit={submitTweet}>\n        <input\n          type=\"text\"\n          placeholder=\"name\"\n          name=\"name\"\n          onChange={(e) => {\n            setYourTweetName(e.target.value);\n          }}\n        ></input>\n\n        <input\n          type=\"text\"\n          placeholder=\"tweet\"\n          name=\"tweet\"\n          onChange={(e) => {\n            setYourTweet(e.target.value);\n          }}\n        ></input>\n        <input type=\"submit\"></input>\n      </form>\n    </div>\n  );\n}\n\nexport default TweetBox;\n","import React from \"react\";\n\n// dumb component\nfunction Feed(props) {\n  const { name, tweet, index } = props;\n\n  return (\n    <div key={index}>\n      <h5>Name: {name}</h5>\n      <h5>Tweet: {tweet}</h5>\n      <br />\n    </div>\n  );\n}\n\nexport default Feed;\n","import React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport Tweets from \"./Tweets\";\n\nimport \"./Feed.css\";\n\nconst socket = io.connect(\"http://localhost:5000\");\n\nfunction Feed() {\n  const [tweets, setTweets] = useState([]);\n\n  // console.log({ tweets });\n\n  useEffect(() => {\n    socket.on(\"tweetEvent\", ({ name, tweet }) => {\n      setTweets([...tweets, { name, tweet }]);\n    });\n  });\n\n  const renderTweets = () => {\n    return tweets.map(({ name, tweet }, index) => (\n      <Tweets name={name} tweet={tweet} index={index} />\n    ));\n  };\n\n  return (\n    <div className=\"feed\">\n      <div>{renderTweets()}</div>\n    </div>\n  );\n}\n\nexport default Feed;\n","import React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport TweetBox from \"./TweetBox\";\nimport Feed from \"./Feed\";\n\nimport \"./HomePage.css\";\n\nfunction HomePage() {\n  return (\n    <div className=\"home-page\">\n      <h1>TWITTER FEED</h1>\n      <TweetBox />\n      <Feed />\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React from \"react\";\n\nimport \"./App.css\";\nimport HomePage from \"./components/HomePage\";\n\nfunction App() {\n  return <HomePage />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}